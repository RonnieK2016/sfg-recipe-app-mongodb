plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.udemy.sfg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
	compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	compile group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.3.1'
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compileOnly 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.4'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.17.0'
	testRuntimeOnly 'org.mockito:mockito-junit-jupiter:2.17.0'
	testCompile('io.projectreactor:reactor-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit' //by both name and group
	}
}

test {
    useJUnitPlatform()
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
